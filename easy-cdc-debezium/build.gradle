plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}
dependencies {
    api 'io.debezium:debezium-api:2.1.3.Final'
    api 'io.debezium:debezium-embedded:2.1.3.Final'
    api 'io.debezium:debezium-storage-redis:2.1.3.Final'
    implementation 'org.apache.rocketmq:rocketmq-client-java:5.0.5'
}
task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}
task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
artifacts {
    archives javadocJar, sourcesJar
}
//java {
//    withJavadocJar()
//    withSourcesJar()
//}
tasks.withType(GenerateModuleMetadata) {
    enabled = false
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'easy-cdc-debezium'
                artifactId = 'easy-cdc-debezium'
                packaging = 'jar'
                description = 'easy-cdc-debezium is a simple CDC pattern component based on Spring / Spring Boot and Embedded Engine.'
                url = 'https://github.com/dlutsniper/easy-cdc-debezium'
                scm {
                    connection = 'scm:git@github.com:Codearte/gradle-nexus-staging-plugin.git'
                    developerConnection = 'scm:git@github.com:Codearte/gradle-nexus-staging-plugin.git'
                    url = 'https://github.com/dlutsniper/easy-cdc-debezium'
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'dlutsniper'
                        name = 'Wang Ying'
                        email = '94246813@qq.com'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            name = version.endsWith('SNAPSHOT') ? "ossrhSnapshot" : "ossrh"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = findProperty('ossrhUsername')
                password = findProperty('ossrhPassword')
            }
        }
    }
}
signing {
    sign publishing.publications.mavenJava
}
